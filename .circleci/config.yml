# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  markdownlint-misspell-shellcheck:
    docker:
      # this image is build from Dockerfile
      # https://github.com/pouchcontainer/pouchlinter/blob/master/Dockerfile
      - image: pouchcontainer/pouchlinter:v0.1.2
    working_directory: /go/src/github.com/dragonflyoss/Dragonfly
    steps:
      - checkout
      - run:
          name: use markdownlint v0.5.0 to lint markdown file (https://github.com/markdownlint/markdownlint)
          command: |
            find  ./ -name  "*.md" | grep -v vendor | grep -v commandline |  grep -v .github |  grep -v swagger |  grep -v api |  xargs mdl -r ~MD002,~MD007,~MD010,~MD013,~MD024,~MD026,~MD029,~MD033,~MD034,~MD036,~MD046
      - run:
          name: use markdown-link-check(https://github.com/tcort/markdown-link-check) to check links in markdown files
          command: |
            set +e
            for name in $(find . -name \*.md | grep -v vendor | grep -v CHANGELOG); do
              if [ -f $name ]; then
                markdown-link-check -q $name;
                if [ $? -ne 0 ]; then
                  code=1
                fi
              fi
            done
            bash -c "exit $code";
      - run:
          name: use opensource tool client9/misspell to correct commonly misspelled English words
          command: |
            find  ./* -name  "*"  | grep -v vendor | xargs misspell -error
      - run:
          name: use ShellCheck (https://github.com/koalaman/shellcheck) to check the validateness of shell scripts in pouch repo
          command: |
            find ./ -name "*.sh" | grep -v vendor | xargs shellcheck

  gocode-check-via-gometalinter-swagger:
    docker:
      - image: pouchcontainer/pouchlinter:v0.1.2
    working_directory: /go/src/github.com/dragonflyoss/Dragonfly
    steps:
      - checkout
      - run:
          name: validate swagger.yml
          command: |
            swagger validate "/go/src/github.com/dragonflyoss/Dragonfly/apis/swagger.yml"
      - run:
          name: use gometalinter to check gocode of this project.
          command: |
            gometalinter --disable-all --cyclo-over=20 --skip vendor -E gofmt -E goimports -E golint -E misspell -E vet -E goconst -E gocyclo ./...
      - run:
          name: detect deadcode without test folder
          command: |
            gometalinter --disable-all --skip vendor --skip test -E deadcode ./...
  unit-test-golang:
    docker:
      - image: circleci/golang:1.10.4
    working_directory: /go/src/github.com/dragonflyoss/Dragonfly
    steps:
      - checkout
      - run:
          name: build client
          command: |
            cd cmd
            cd dfget && go build
            cd ..
            cd dfdaemon && go build
      - run:
          name: unit test
          command: make unit-test
      - run:
          name: upload code coverage report
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: rm coverage.txt
          command: rm coverage.txt

  api-integration-test:
    docker:
      - image: circleci/golang:1.10.4
    working_directory: /go/src/github.com/dragonflyoss/Dragonfly
    steps:
      - checkout
      - run:
          name: start supernode daemon background & run all integration test cases in test
          command: |
            echo "install maven and jdk8"
            sudo apt-get update > /dev/null 2>&1
            sudo apt-get install openjdk-8-jdk maven > /dev/null 2>&1
            echo "building..."
            make build > /dev/null
            cd cmd
            cd supernode && go build
            ./supernode --home-dir /tmp/dragonfly --port 8080 &
            go test -v ../../test

workflows:
  version: 2
  ci:
    jobs:
      - markdownlint-misspell-shellcheck
      - unit-test-golang
      - gocode-check-via-gometalinter-swagger
      - api-integration-test
