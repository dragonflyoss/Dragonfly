# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  linters-check:
    docker:
      # this image is build from Dockerfile
      # https://github.com/pouchcontainer/pouchlinter/blob/master/Dockerfile
      - image: pouchcontainer/pouchlinter:v0.2.4
    working_directory: /go/src/github.com/dragonflyoss/Dragonfly
    steps:
      - checkout
      - run:
          name: use markdownlint v0.5.0 to lint markdown file (https://github.com/markdownlint/markdownlint)
          command: |
            find  ./ -name  "*.md" | grep -v commandline |  grep -v .github |  grep -v swagger |  grep -v api |  xargs mdl -r ~MD002,~MD007,~MD010,~MD013,~MD024,~MD026,~MD029,~MD033,~MD034,~MD036,~MD046
      - run:
          name: use markdown-link-check(https://github.com/tcort/markdown-link-check) to check links in markdown files
          command: |
            set +e
            curl -OfsSL https://raw.githubusercontent.com/dragonflyoss/dragonfly-scripts/master/config/markdown-link-check-scripts.json
            for name in $(find . -name \*.md | grep -v CHANGELOG); do
              if [ -f $name ]; then
                markdown-link-check -q -v -c ./markdown-link-check-scripts.json $name;
                if [ $? -ne 0 ]; then
                  code=1
                fi
              fi
            done
            bash -c "exit $code";
      - run:
          name: use opensource tool client9/misspell to correct commonly misspelled English words
          command: |
            find  ./* -name  "*" | xargs misspell -error
      - run:
          name: use ShellCheck (https://github.com/koalaman/shellcheck) to check the validateness of shell scripts in pouch repo
          command: |
            find ./ -name "*.sh" | xargs shellcheck
      - run:
          name: validate go mod files
          command: |
            make check-go-mod
      - run:
          name: validate swagger.yml
          command: |
            swagger validate "/go/src/github.com/dragonflyoss/Dragonfly/apis/swagger.yml"
      - run:
          name: use golangci-lint to check gocode of this project.
          command: |
            make golangci-lint
      - run:
          name: boilerplate check
          command: |
            make boilerplate-check

  unit-test-golang:
    docker:
      - image: circleci/golang:1.12.10
    working_directory: /go/src/github.com/dragonflyoss/Dragonfly
    steps:
      - checkout
      - run:
          name: build client
          command: |
            make build
      - run:
          name: unit test
          command: make unit-test
      - run:
          name: upload code coverage report
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: rm coverage.txt
          command: rm coverage.txt

  api-integration-test:
    docker:
      - image: circleci/golang:1.12.10
    working_directory: /go/src/github.com/dragonflyoss/Dragonfly
    steps:
      - checkout
      - run:
          name: build dragonfly & run all integration test cases in test
          command: |
            echo "building..."
            make build > /dev/null
            echo "start integration test..."
            make integration-test

workflows:
  version: 2
  ci:
    jobs:
      - linters-check
      - unit-test-golang
      - api-integration-test
